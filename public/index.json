
[{"content":"I am a dedicated Software Developer with 2 years of experience and a diverse skill set. I possess proficiency in Unity and Godot, complemented by a solid understanding of technologies such as C, C++, Rust, C# and .NET.\nMy operating system of choice is Bazzite, a custom image built upon Fedora Atomic Desktops. My enthusiasm extends to Free/Libre and Open Source Software (FLOSS) and Open-Source Hardware (OSH). Driven by a desire for excellence, I am commited to continue evolving as a developer.\n","date":"6 May 2024","externalUrl":null,"permalink":"/","section":"","summary":"I am a dedicated Software Developer with 2 years of experience and a diverse skill set.","title":"","type":"page"},{"content":" This section contains a list of my personal projects. ","date":"6 May 2024","externalUrl":null,"permalink":"/projects/personal-projects/","section":"Projects","summary":"This section contains a list of my personal projects.","title":"Personal Projects","type":"projects"},{"content":"","date":"6 May 2024","externalUrl":null,"permalink":"/tags/project/","section":"Tags","summary":"","title":"Project","type":"tags"},{"content":"","date":"6 May 2024","externalUrl":null,"permalink":"/projects/","section":"Projects","summary":"","title":"Projects","type":"projects"},{"content":"I\u0026rsquo;m currently maintaining a fork of an open source rhythm game content editor called BmsONE.\nIt is an editor for the open format specification BMSON, which I also forked and been working on at this repo: DJKero/bmson-spec-fork Technical specification for bmson format Python 0 0 The BMSON format is the successor to the BMS format.\nThe key feature of these formats are the Keysounds, pioneered by KONAMI\u0026rsquo;s Beatmania, the user\u0026rsquo;s actions trigger sounds corresponding to the notes played. These were decided at the time of production and exported separately from the song\u0026rsquo;s BGM (Background Music).\nThe previous format had a limit on the maximum number of Keysounds available to use.\nThe BMSON format eliminates this technical limitation while also providing a better production environment for the content creators.\nThe song producer can export each SFX and Instrument Track separately.\nThe song can be arranged in the editor by the song producer or the level creator once and be saved as a template for level creation.\nThe format is way more flexible for content creation because the responsibility for cutting the sounds is delegated to the game itself, meaning that every single SFX or part of an Instrument Track can be used as a note.\nThe editor is built with Qt and written in C++.\nThere\u0026rsquo;s a lot of work to do in this project ranging from fixing deprecation and compiler warnings, fixing memory issues like memory leaks, fixing crashes, and adding functionality to improve the user\u0026rsquo;s workflow, compared to existing BMS editors.\nProject repo: DJKero/BmsONE an editor for bmson files. C\u0026#43;\u0026#43; 1 1 ","date":"6 May 2024","externalUrl":null,"permalink":"/projects/personal-projects/rhythm-game-editor/","section":"Projects","summary":"I\u0026rsquo;m currently maintaining a fork of an open source rhythm game content editor called BmsONE.","title":"Rhythm Game Editor","type":"default"},{"content":"","date":"6 May 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]